name: Publish NuGet Package

on:
  push:
    tags:
      - "v*"

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Ensure annotated tag
        id: check_annotated
        run: |
          TAG_NAME="${GITHUB_REF##*/}"
          echo "Checking if tag '$TAG_NAME' is annotated..."

          # Get tag object type: should be "tag" for annotated, "commit" for lightweight
          TAG_TYPE=$(git cat-file -t "$TAG_NAME" || echo "none")

          if [ "$TAG_TYPE" != "tag" ]; then
            echo "❌ Tag '$TAG_NAME' is not an annotated tag (Type: $TAG_TYPE). Workflow will be aborted."
            exit 1
          else
            echo "✅ Annotated tag recognized: $TAG_NAME"
          fi

      - name: Setup .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "8.0.x"

      - name: Get version from tag
        id: get_version
        run: |
          TAG=${GITHUB_REF##*/}
          VERSION=${TAG#v}
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Restore dependencies
        working-directory: src
        run: dotnet restore

      - name: Build in Release
        working-directory: src
        run: dotnet build --configuration Release --no-restore

      - name: Pack NuGet package
        working-directory: src
        run: |
          dotnet pack --configuration Release \
            -p:PackageVersion=${{ steps.get_version.outputs.version }} \
            --output ./nupkg

      - name: Push to NuGet.org
        working-directory: src
        run: |
          dotnet nuget push ./nupkg/*.nupkg \
            --api-key ${{ secrets.NUGET_API_KEY }} \
            --source https://api.nuget.org/v3/index.json

      - name: Push to GitHub Packages
        working-directory: src
        run: |
          dotnet nuget push ./nupkg/*.nupkg \
            --api-key ${{ secrets.PACKAGES_GITHUB_TOKEN }} \
            --source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json"
